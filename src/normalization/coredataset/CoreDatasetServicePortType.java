
package normalization.coredataset;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "CoreDatasetServicePortType", targetNamespace = "http://CoreDataset")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface CoreDatasetServicePortType {


    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "urn:getOWLVersion")
    @WebResult(targetNamespace = "http://CoreDataset")
    @RequestWrapper(localName = "getOWLVersion", targetNamespace = "http://CoreDataset", className = "norm.GetOWLVersion")
    @ResponseWrapper(localName = "getOWLVersionResponse", targetNamespace = "http://CoreDataset", className = "norm.GetOWLVersionResponse")
    public String getOWLVersion();

    /**
     * 
     * @param concept
     * @param binding
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod(action = "urn:publicExecuteQuery")
    @WebResult(targetNamespace = "http://CoreDataset")
    @RequestWrapper(localName = "publicExecuteQuery", targetNamespace = "http://CoreDataset", className = "norm.PublicExecuteQuery")
    @ResponseWrapper(localName = "publicExecuteQueryResponse", targetNamespace = "http://CoreDataset", className = "norm.PublicExecuteQueryResponse")
    public List<String> publicExecuteQuery(
        @WebParam(name = "concept", targetNamespace = "http://CoreDataset")
        String concept,
        @WebParam(name = "binding", targetNamespace = "http://CoreDataset")
        Value binding);

    /**
     * 
     * @param term
     * @return
     *     returns norm.NormalizedConcept
     */
    @WebMethod(operationName = "CD2CDMNEW", action = "urn:CD2CDMNEW")
    @WebResult(targetNamespace = "http://CoreDataset")
    @RequestWrapper(localName = "CD2CDMNEW", targetNamespace = "http://CoreDataset", className = "norm.CD2CDMNEW")
    @ResponseWrapper(localName = "CD2CDMNEWResponse", targetNamespace = "http://CoreDataset", className = "norm.CD2CDMNEWResponse")
    public NormalizedConcept cd2CDMNEW(
        @WebParam(name = "term", targetNamespace = "http://CoreDataset")
        String term);

    /**
     * 
     * @param term
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "urn:getRootConcept")
    @WebResult(targetNamespace = "http://CoreDataset")
    @RequestWrapper(localName = "getRootConcept", targetNamespace = "http://CoreDataset", className = "norm.GetRootConcept")
    @ResponseWrapper(localName = "getRootConceptResponse", targetNamespace = "http://CoreDataset", className = "norm.GetRootConceptResponse")
    public String getRootConcept(
        @WebParam(name = "term", targetNamespace = "http://CoreDataset")
        String term);

    /**
     * 
     * @param term
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod(operationName = "CDM2CD", action = "urn:CDM2CD")
    @WebResult(targetNamespace = "http://CoreDataset")
    @RequestWrapper(localName = "CDM2CD", targetNamespace = "http://CoreDataset", className = "norm.CDM2CD")
    @ResponseWrapper(localName = "CDM2CDResponse", targetNamespace = "http://CoreDataset", className = "norm.CDM2CDResponse")
    public List<String> cdm2CD(
        @WebParam(name = "term", targetNamespace = "http://CoreDataset")
        String term);

    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "urn:getServiceVersion")
    @WebResult(targetNamespace = "http://CoreDataset")
    @RequestWrapper(localName = "getServiceVersion", targetNamespace = "http://CoreDataset", className = "norm.GetServiceVersion")
    @ResponseWrapper(localName = "getServiceVersionResponse", targetNamespace = "http://CoreDataset", className = "norm.GetServiceVersionResponse")
    public String getServiceVersion();

    /**
     * 
     * @param concept
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod(action = "urn:getParents")
    @WebResult(targetNamespace = "http://CoreDataset")
    @RequestWrapper(localName = "getParents", targetNamespace = "http://CoreDataset", className = "norm.GetParents")
    @ResponseWrapper(localName = "getParentsResponse", targetNamespace = "http://CoreDataset", className = "norm.GetParentsResponse")
    public List<String> getParents(
        @WebParam(name = "concept", targetNamespace = "http://CoreDataset")
        String concept);

    /**
     * 
     * @param term
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod(operationName = "CD2CDM", action = "urn:CD2CDM")
    @WebResult(targetNamespace = "http://CoreDataset")
    @RequestWrapper(localName = "CD2CDM", targetNamespace = "http://CoreDataset", className = "norm.CD2CDM")
    @ResponseWrapper(localName = "CD2CDMResponse", targetNamespace = "http://CoreDataset", className = "norm.CD2CDMResponse")
    public List<String> cd2CDM(
        @WebParam(name = "term", targetNamespace = "http://CoreDataset")
        String term);

    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "urn:getNormalFormVersion")
    @WebResult(targetNamespace = "http://CoreDataset")
    @RequestWrapper(localName = "getNormalFormVersion", targetNamespace = "http://CoreDataset", className = "norm.GetNormalFormVersion")
    @ResponseWrapper(localName = "getNormalFormVersionResponse", targetNamespace = "http://CoreDataset", className = "norm.GetNormalFormVersionResponse")
    public String getNormalFormVersion();

    /**
     * 
     * @param term
     * @return
     *     returns norm.NormalizedExpression
     */
    @WebMethod(action = "urn:getShortNormalForm")
    @WebResult(targetNamespace = "http://CoreDataset")
    @RequestWrapper(localName = "getShortNormalForm", targetNamespace = "http://CoreDataset", className = "norm.GetShortNormalForm")
    @ResponseWrapper(localName = "getShortNormalFormResponse", targetNamespace = "http://CoreDataset", className = "norm.GetShortNormalFormResponse")
    public NormalizedExpression getShortNormalForm(
        @WebParam(name = "term", targetNamespace = "http://CoreDataset")
        String term);

    /**
     * 
     * @param concept
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod(action = "urn:getTillGranparents")
    @WebResult(targetNamespace = "http://CoreDataset")
    @RequestWrapper(localName = "getTillGranparents", targetNamespace = "http://CoreDataset", className = "norm.GetTillGranparents")
    @ResponseWrapper(localName = "getTillGranparentsResponse", targetNamespace = "http://CoreDataset", className = "norm.GetTillGranparentsResponse")
    public List<String> getTillGranparents(
        @WebParam(name = "concept", targetNamespace = "http://CoreDataset")
        String concept);

    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "urn:getTermBindingVersion")
    @WebResult(targetNamespace = "http://CoreDataset")
    @RequestWrapper(localName = "getTermBindingVersion", targetNamespace = "http://CoreDataset", className = "norm.GetTermBindingVersion")
    @ResponseWrapper(localName = "getTermBindingVersionResponse", targetNamespace = "http://CoreDataset", className = "norm.GetTermBindingVersionResponse")
    public String getTermBindingVersion();

    /**
     * 
     * @param terms
     * @return
     *     returns java.util.List<norm.KinshipConcepts>
     */
    @WebMethod(action = "urn:getNextGen")
    @WebResult(targetNamespace = "http://CoreDataset")
    @RequestWrapper(localName = "getNextGen", targetNamespace = "http://CoreDataset", className = "norm.GetNextGen")
    @ResponseWrapper(localName = "getNextGenResponse", targetNamespace = "http://CoreDataset", className = "norm.GetNextGenResponse")
    public List<KinshipConcepts> getNextGen(
        @WebParam(name = "terms", targetNamespace = "http://CoreDataset")
        List<String> terms);

    /**
     * 
     * @param concept
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod(action = "urn:expandQuery")
    @WebResult(targetNamespace = "http://CoreDataset")
    @RequestWrapper(localName = "expandQuery", targetNamespace = "http://CoreDataset", className = "norm.ExpandQuery")
    @ResponseWrapper(localName = "expandQueryResponse", targetNamespace = "http://CoreDataset", className = "norm.ExpandQueryResponse")
    public List<String> expandQuery(
        @WebParam(name = "concept", targetNamespace = "http://CoreDataset")
        String concept);

}
